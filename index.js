require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');
const { startIQTest, handleIQAnswer } = require('./iq');
const { logHelpRequest } = require('./sheets');
const { handleAdminCommands } = require('./admin');
const fs = require('fs');

const bot = new TelegramBot(process.env.BOT_TOKEN, { polling: true });
console.log("‚úÖ KazRex –±–æ—Ç —ñ—Å–∫–µ “õ–æ—Å—ã–ª–¥—ã!");

const helpState = {};
const userMenuState = {};
const iqState = {};

const projects = JSON.parse(fs.readFileSync('projects.json', 'utf-8'));

bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  userMenuState[chatId] = null;
  iqState[chatId] = null;

  const text = `ü§ñ –°”ô–ª–µ–º, ${msg.from.first_name || '–¥–æ—Å—ã–º'}!  
üß† KazRex –±–æ—Ç“õ–∞ “õ–æ—à –∫–µ–ª–¥—ñ“£.

–ú—ã–Ω–∞ –º”ô–∑—ñ—Ä–¥–µ–Ω —Ç–∞“£–¥–∞:`;

  bot.sendMessage(chatId, text, {
    reply_markup: {
      keyboard: [
        ['üìö –ñ–æ–±–∞–ª–∞—Ä', 'ü§ù –ë–∞–π–ª–∞–Ω—ã—Å'],
        ['‚ÑπÔ∏è –ë—ñ–∑ —Ç—É—Ä–∞–ª—ã']
      ],
      resize_keyboard: true
    }
  });
});

bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  // üîê –ê–¥–º–∏–Ω –ø”ô—Ä–º–µ–Ω–¥–µ—Ä—ñ
  const isAdmin = msg.from.id.toString() === process.env.ADMIN_ID;
  if (isAdmin && text.startsWith('/')) {
    return handleAdminCommands(bot, msg);
  }

  // IQ —Ç–µ—Å—Ç –ª–æ–≥–∏–∫–∞—Å—ã
  if (iqState[chatId]) {
    return handleIQAnswer(bot, msg, iqState);
  }

  // üîô –ê—Ä—Ç“õ–∞
  if (text === 'üîô –ê—Ä—Ç“õ–∞') {
    helpState[chatId] = null;
    iqState[chatId] = null;
    return bot.sendMessage(chatId, '–ë–∞—Å—Ç—ã –º”ô–∑—ñ—Ä–≥–µ –æ—Ä–∞–ª–¥—ã“£—ã–∑:', {
      reply_markup: {
        keyboard: [
          ['üìö –ñ–æ–±–∞–ª–∞—Ä', 'ü§ù –ë–∞–π–ª–∞–Ω—ã—Å'],
          ['‚ÑπÔ∏è –ë—ñ–∑ —Ç—É—Ä–∞–ª—ã']
        ],
        resize_keyboard: true
      }
    });
  }

  // –ñ–æ–±–∞–ª–∞—Ä
  if (text === 'üìö –ñ–æ–±–∞–ª–∞—Ä') {
    const projectButtons = projects.map(p => [p.name]);
    return bot.sendMessage(chatId, '“ö—ã–∑—ã“õ—Ç—ã –∂–æ–±–∞ —Ç–∞“£–¥–∞“£—ã–∑:', {
      reply_markup: {
        keyboard: [...projectButtons, ['üîô –ê—Ä—Ç“õ–∞']],
        resize_keyboard: true
      }
    });
  }

  const project = projects.find(p => p.name === text);
  if (project) {
    return bot.sendMessage(chatId, `üìÇ ${project.name}\n${project.description}\nüîó ${project.link}`);
  }

  // –ë–∞–π–ª–∞–Ω—ã—Å
  if (text === 'ü§ù –ë–∞–π–ª–∞–Ω—ã—Å') {
    return bot.sendMessage(chatId, '“ö–∞–∂–µ—Ç—Ç—ñ –±”©–ª—ñ–º–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑:', {
      reply_markup: {
        keyboard: [
          ['üó£ –ö”©–º–µ–∫ —Å“±—Ä–∞—É', 'üìû –ö–æ–Ω—Ç–∞–∫—Ç'],
          ['üîô –ê—Ä—Ç“õ–∞']
        ],
        resize_keyboard: true
      }
    });
  }

  if (text === 'üìû –ö–æ–Ω—Ç–∞–∫—Ç') {
    return bot.sendMessage(chatId, `üìû –ë–∞–π–ª–∞–Ω—ã—Å “Ø—à—ñ–Ω:\n@kazrex_admin\nüåê https://kazrex.at.ua`);
  }

  // –ö”©–º–µ–∫ —Å“±—Ä–∞—É
  if (text === 'üó£ –ö”©–º–µ–∫ —Å“±—Ä–∞—É') {
    helpState[chatId] = { stage: 'device' };
    return bot.sendMessage(chatId, '“ö–∞–π “õ“±—Ä—ã–ª“ì—ã –±–æ–π—ã–Ω—à–∞ –∫”©–º–µ–∫ –∫–µ—Ä–µ–∫?', {
      reply_markup: {
        keyboard: [['üíª –ö–æ–º–ø—å—é—Ç–µ—Ä', 'üì± –¢–µ–ª–µ—Ñ–æ–Ω'], ['üîô –ê—Ä—Ç“õ–∞']],
        resize_keyboard: true
      }
    });
  }

  if (helpState[chatId]?.stage === 'device') {
    if (text === 'üíª –ö–æ–º–ø—å—é—Ç–µ—Ä') {
      helpState[chatId].device = '–ö–æ–º–ø—å—é—Ç–µ—Ä';
      helpState[chatId].stage = 'pc';
      return bot.sendMessage(chatId, '–ö–æ–º–ø—å—é—Ç–µ—Ä–≥–µ “õ–∞—Ç—ã—Å—Ç—ã “õ–∞–Ω–¥–∞–π –∫”©–º–µ–∫ –∫–µ—Ä–µ–∫?', {
        reply_markup: {
          keyboard: [['üß© –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Ä–Ω–∞—Ç—É', '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∂–∞—Å–∞—É'], ['üåê –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –ø—Ä–æ–±–ª–µ–º–∞—Å—ã'], ['üîô –ê—Ä—Ç“õ–∞']],
          resize_keyboard: true
        }
      });
    }
    if (text === 'üì± –¢–µ–ª–µ—Ñ–æ–Ω') {
      helpState[chatId].device = '–¢–µ–ª–µ—Ñ–æ–Ω';
      helpState[chatId].stage = 'phone';
      return bot.sendMessage(chatId, '“ö–∞–π –∂“Ø–π–µ –±–æ–π—ã–Ω—à–∞ –∫”©–º–µ–∫ –∫–µ—Ä–µ–∫?', {
        reply_markup: {
          keyboard: [['üçè iOS', 'ü§ñ Android'], ['üîô –ê—Ä—Ç“õ–∞']],
          resize_keyboard: true
        }
      });
    }
  }

  const helpOptions = {
    'üß© –ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Ä–Ω–∞—Ç—É': '–ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Ä–Ω–∞—Ç—É',
    '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∂–∞—Å–∞—É': '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∂–∞—Å–∞—É',
    'üåê –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –ø—Ä–æ–±–ª–µ–º–∞—Å—ã': '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç –ø—Ä–æ–±–ª–µ–º–∞—Å—ã',
    'üçè iOS': 'iOS –∫”©–º–µ–∫',
    'ü§ñ Android': 'Android –∫”©–º–µ–∫'
  };

  if (helpState[chatId] && helpOptions[text]) {
    const request = {
      user: `${msg.from.username || msg.from.first_name}`,
      device: helpState[chatId].device || '–ë–µ–ª–≥—ñ—Å—ñ–∑',
      issue: helpOptions[text],
      time: new Date().toLocaleString()
    };

    await logHelpRequest(request);
    delete helpState[chatId];

    return bot.sendMessage(chatId, `‚úÖ "${request.issue}" –±–æ–π—ã–Ω—à–∞ –∫”©–º–µ–≥—ñ“£—ñ–∑ —Ç—ñ—Ä–∫–µ–ª–¥—ñ.`);
  }

  // IQ —Ç–µ—Å—Ç
  if (text === 'üß† IQ —Ç–µ—Å—Ç') {
    return startIQTest(bot, msg, iqState);
  }

  // –ë—ñ–∑ —Ç—É—Ä–∞–ª—ã
  if (text === '‚ÑπÔ∏è –ë—ñ–∑ —Ç—É—Ä–∞–ª—ã') {
    return bot.sendMessage(chatId, `
üß† *KazRex ‚Äì –ê“õ—ã–ª –º–µ–Ω –∫–æ–¥—Ç—ã“£ —Ç–æ“ì—ã—Å—ã*

–ë—ñ–∑ ‚Äì –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª–¥—ã“õ –∂”ô–Ω–µ “±–ª—Ç—Ç—ã“õ –º–∞–∑–º“±–Ω–¥–∞“ì—ã –≤–µ–± –∂–æ–±–∞–ª–∞—Ä–º–µ–Ω –∞–π–Ω–∞–ª—ã—Å–∞—Ç—ã–Ω —à–∞“ì—ã–Ω –∫–æ–º–∞–Ω–¥–∞.

üìç –ú–∞“õ—Å–∞—Ç—ã–º—ã–∑ ‚Äì “õ–∞–∑–∞“õ—à–∞ —Å–∞–ø–∞–ª—ã —Ü–∏—Ñ—Ä–ª—ã“õ ”©–Ω—ñ–º–¥–µ—Ä “±—Å—ã–Ω—É  
üõ† “ö“±—Ä—ã–ª—Ç–∞–π—à—ã: *Kazrex*  
üåê –°–∞–π—Ç: https://kazrex.at.ua
`, { parse_mode: "Markdown" });
  }
});
